{"version":3,"file":"event-loop-delay.umd.js","sources":["../src/Delay-es5.mjs"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n\nvar listenersMap = new WeakMap();\n\nfunction Delay(wait = 0) {\n  if (this instanceof Delay) {\n    var _marked =\n    /*#__PURE__*/\n    regeneratorRuntime.mark(f);\n\n    listenersMap.set(this, []);\n    var queue = listenersMap.get(this);\n\n    function f() {\n      return regeneratorRuntime.wrap(function f$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!queue.length) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 3;\n              return queue.shift();\n\n            case 3:\n              _context.next = 0;\n              break;\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _marked);\n    }\n\n    return function delay(func) {\n      var _this = this;\n\n      if (queue.length > 0) {\n        queue.push({\n          next: null\n        });\n        queue[queue.length - 2].next = func;\n        return false;\n      }\n\n      queue.push({\n        next: null\n      });\n      func();\n      var timer = setInterval(function () {\n        var a = f().next();\n\n        if (a.done) {\n          clearInterval(timer);\n          return false;\n        }\n\n        if (typeof a.value.next === \"function\") {\n          a.value.next.call(_this);\n        }\n      }, wait);\n    }.bind(this);\n  }\n}\n\nexport { Delay };\nexport default Delay;\n"],"names":["Delay","wait","f","regeneratorRuntime","wrap","_context","prev","next","queue","length","shift","stop","_marked","mark","listenersMap","set","get","func","_this","push","timer","setInterval","a","done","clearInterval","value","call","bind","runtime","exports","innerFn","outerFn","self","tryLocsList","protoGenerator","prototype","Generator","generator","Object","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","obj","arg","type","err","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","forEach","method","AsyncIterator","invoke","resolve","reject","record","result","_typeof","hasOwn","Promise","__await","then","unwrapped","error","enqueue","callInvokeWithMethodAndArg","previousPromise","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","iterator","undefined","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","values","iterable","iteratorMethod","iteratorSymbol","isNaN","i","Op","hasOwnProperty","$Symbol","Symbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","constructor","displayName","isGeneratorFunction","genFun","ctor","name","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","key","reverse","pop","skipTempReset","charAt","slice","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","accidentalStrictMode","Function","WeakMap"],"mappings":"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"}